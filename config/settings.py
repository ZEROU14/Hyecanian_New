"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
from environ import Env
env = Env()
env.read_env()
# load_dotenv()
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_simplejwt',
    'debug_toolbar',
    'taggit',
    'corsheaders',
  

    # our apps
    'pages',
    'blogs',
    'core',
    'payment'
    
]

INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # Your frontend URL
]
MIDDLEWARE = [
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    

]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [str(BASE_DIR.joinpath('templates'))],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                
                
                # allatuh settings  
          

                
            ],
        },
    },
]

KAVEH_NEGAR = {
    'API_KEY': '494E6132435A784238794D7676344A617161774C3565636248465243416931545A374E61314A446A4C79513D',
    'API_URL': 'https://api.kavenegar.com/v1/{api_key}/verify/lookup.json',
}
PAYMENT = {
    'ZARINPAL_MERCHANT_ID': 'asfhashfokhjlkhjiuh',
    'ZARINPAL_DESCRIPTION': 'reQESUT FOR TICKET ',
    'ZARINPAL_CALLBACK_URL': '127.0.0.1:8000/',
    'ZARINPAL_SANDBOX': False,  # Set to True for sandbox, False for production
}

ZARINPAL_URLS = {
    'SANDBOX': {
        'REQUEST_URL': 'https://sandbox.zarinpal.com/pg/rest/WebGate/PaymentRequest.json',
        'VERIFY_URL': 'https://sandbox.zarinpal.com/pg/rest/WebGate/PaymentVerification.json',
        'STARTPAY_URL': 'https://sandbox.zarinpal.com/pg/StartPay/',
    },
    'PRODUCTION': {
        'REQUEST_URL': 'https://api.zarinpal.com/pg/v4/payment/request.json',
        'VERIFY_URL': 'https://api.zarinpal.com/pg/v4/payment/verify.json',
        'STARTPAY_URL': 'https://www.zarinpal.com/pg/StartPay/',
    }
}
WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
        'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'web',
        'HOST': 'localhost',
        'USER': 'root',
        'PASSWORD': 'password',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# Define the base URL for serving media files
MEDIA_URL = '/media/'

# Specify the directory where media files are stored
MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')


REST_FRAMEWORK = {
    'COERCE_DECIMAL_TO_STRING': False,
    'DEFAULT_PERMISSION_CLASSES': [],
    'DEFAULT_AUTHENTICATION_CLASSES' : (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}
from datetime import timedelta
SIMPLE_JWT = {
    "AUTH_HEADER_TYPES":('JWT',),
    "ACCESS_TOKEN_LIFETIME" : timedelta(days=30),
}
SER = {
    'SERIALIZERS':{
        'user_create' : 'core.serializers.CustomUserCreateSerializer',
        'current_user' : 'core.serializers.CustomUserSerializer',
        
    }
}

AUTH_USER_MODEL = 'core.CustomUser'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # This backend supports permissions
    # Include your custom authentication backend if you have one
]

KAVE_NEGAR_API_KEY_OTP = '4452524758666D616C4E6F79324A636466784A6A496C355A50565555392B65306F2B38354F595755384A733D'


# Session settings
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = False  # Set to True in production